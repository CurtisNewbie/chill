mode.production: "true"
app.name: "chill"

server: # http server
  enabled: "true"
  host: "0.0.0.0"
  port: "8100"

mysql:
  enabled: "true"
  database: "chill"
  port: "3306"
  host: "${MYSQL_HOST}"
  user: "${MYSQL_USERNAME}"
  password: "${MYSQL_PASSWORD}"

# redis:
#   enabled: "true"
#   address: "redis"
#   port: "6379"
#   username: ""
#   password: ""
#   database: "0"

# consul:
#   enabled: "false"
#   consulAddress: "consul:8500"

# rabbitmq:
#   enabled: "false"
#   host: "localhost"
#   port: "5672"
#   username: "guest"
#   password: "guest"
#   vhost: ""

logging:
  level: "info"
  rolling:
    file: "logs/chill.log"

scripts.base-folder: "scripts"

auth:
  basic:
    username: "${CHILL_USERNAME}"
    password: "${CHILL_PASSWORD}"

build:
  - name: "build_mini-fstore"
    steps:
      - script: "mini-fstore.sh"
    git-repo: "~/git/mini-fstore"
  - name: "build_user-vault"
    steps:
      - script: "user-vault.sh"
    git-repo: "~/git/user-vault"
  - name: "build_event-pump"
    steps:
      - script: "event-pump.sh"
    git-repo: "~/git/event-pump"
  - name: "build_logbot"
    steps:
      - script: "logbot.sh"
    git-repo: "~/git/logbot"
  - name: "restart_nginx"
    steps:
      - command: "cd ~/services && docker-compose restart nginx"
  - name: "build_vfm"
    steps:
      - script: "vfm.sh"
    git-repo: "~/git/vfm"
  - name: "build_gatekeeper"
    steps:
      - script: "gatekeeper.sh"
    git-repo: "~/git/gatekeeper"
